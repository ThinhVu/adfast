!function(){var e,t="function"==typeof require?require(".."):window._;QUnit.module("Utility",{beforeEach:function(){e=t.clone(t.templateSettings)},afterEach:function(){t.templateSettings=e}}),"object"==typeof this&&QUnit.test("noConflict",function(e){var a=t.noConflict();e.equal(a.identity(1),1),"function"!=typeof require?(e.equal(this._,void 0,"global underscore is removed"),this._=a):"undefined"!=typeof global&&delete global._}),"function"==typeof require&&QUnit.test("noConflict (node vm)",function(e){e.expect(2);var a=e.async(),n=require("fs"),i=require("vm"),l=__dirname+"/../underscore.js";n.readFile(l,function(n,u){var r=i.createScript(u+"this.underscore = this._.noConflict();",l),s={_:"oldvalue"};r.runInNewContext(s),e.equal(s._,"oldvalue"),e.equal(s.underscore.VERSION,t.VERSION),a()})}),QUnit.test("#750 - Return _ instance.",function(e){e.expect(2);var a=t([]);e.strictEqual(t(a),a),e.strictEqual(new t(a),a)}),QUnit.test("identity",function(e){var a={name:"moe"};e.equal(t.identity(a),a,"stooge is the same as his identity")}),QUnit.test("constant",function(e){var a={name:"moe"};e.equal(t.constant(a)(),a,"should create a function that returns stooge")}),QUnit.test("noop",function(e){e.strictEqual(t.noop("curly","larry","moe"),void 0,"should always return undefined")}),QUnit.test("property",function(e){var a={name:"moe"};e.equal(t.property("name")(a),"moe","should return the property with the given name"),e.equal(t.property("name")(null),void 0,"should return undefined for null values"),e.equal(t.property("name")(void 0),void 0,"should return undefined for undefined values")}),QUnit.test("propertyOf",function(e){function a(){this.shemp=87}var n=t.propertyOf({curly:2,moe:1,larry:3});e.equal(n("curly"),2,"should return the property with the given name"),e.equal(n(null),void 0,"should return undefined for null values"),e.equal(n(void 0),void 0,"should return undefined for undefined values"),a.prototype={curly:2,moe:1,larry:3};var i=t.propertyOf(new a);e.equal(i("curly"),2,"should return properties from further up the prototype chain");var l=t.propertyOf(null);e.equal(l("curly"),void 0,"should return undefined when obj is null");var u=t.propertyOf(void 0);e.equal(u("curly"),void 0,"should return undefined when obj is undefined")}),QUnit.test("random",function(e){var a=t.range(1e3),n=Math.pow(2,31),i=Math.pow(2,62);e.ok(t.every(a,function(){return t.random(n,i)>=n}),"should produce a random number greater than or equal to the minimum number"),e.ok(t.some(a,function(){return t.random(Number.MAX_VALUE)>0}),"should produce a random number when passed `Number.MAX_VALUE`")}),QUnit.test("now",function(e){var a=t.now()-(new Date).getTime();e.ok(a<=0&&a>-5,"Produces the correct time in milliseconds")}),QUnit.test("uniqueId",function(e){for(var a=[],n=0;n++<100;)a.push(t.uniqueId());e.equal(t.uniq(a).length,a.length,"can generate a globally-unique stream of ids")}),QUnit.test("times",function(e){var a=[];t.times(3,function(e){a.push(e)}),e.deepEqual(a,[0,1,2],"is 0 indexed"),a=[],t(3).times(function(e){a.push(e)}),e.deepEqual(a,[0,1,2],"works as a wrapper"),e.deepEqual([0,1,2],t.times(3,function(e){return e}),"collects return values"),e.deepEqual(t.times(0,t.identity),[]),e.deepEqual(t.times(-1,t.identity),[]),e.deepEqual(t.times(parseFloat("-Infinity"),t.identity),[])}),QUnit.test("mixin",function(e){var a=t.mixin({myReverse:function(e){return e.split("").reverse().join("")}});e.equal(a,t,"returns the _ object to facilitate chaining"),e.equal(t.myReverse("panacea"),"aecanap","mixed in a function to _"),e.equal(t("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")}),QUnit.test("_.escape",function(e){e.equal(t.escape(null),"")}),QUnit.test("_.unescape",function(e){var a="Curly & Moe";e.equal(t.unescape(null),""),e.equal(t.unescape(t.escape(a)),a),e.equal(t.unescape(a),a,"don't unescape unnecessarily")}),QUnit.test("_.escape & unescape",function(e){var a=["<",">",'"',"'","`"];t.each(a,function(a){var n="a "+a+" string escaped",i=t.escape(n);e.notEqual(n,i,a+" is escaped"),e.equal(n,t.unescape(i),a+" can be unescaped"),n="a "+a+a+a+"some more string"+a,i=t.escape(n),e.equal(i.indexOf(a),-1,"can escape multiple occurances of "+a),e.equal(t.unescape(i),n,"multiple occurrences of "+a+" can be unescaped")});var n=" other stuff ",i=a.join(n);i+=i,e.ok(t.every(a,function(e){return i.indexOf(e)!==-1}),"handles multiple characters"),e.ok(i.indexOf(n)>=0,"can escape multiple escape characters at the same time");var l="some string & another string & yet another",u=t.escape(l);e.notStrictEqual(u.indexOf("&"),-1,"handles & aka &amp;"),e.equal(t.unescape(l),l,"can unescape &amp;")}),QUnit.test("template",function(e){var a=t.template("<%= thing %> is gettin' on my noives!"),n=a({thing:"This"});e.equal(n,"This is gettin' on my noives!","can do basic attribute interpolation");var i=t.template("A <% this %> B");e.equal(i(),"A  B");var l=t.template("<%= thing %> is \\ridanculous");e.equal(l({thing:"This"}),"This is \\ridanculous");var u=t.template('<%= a ? "checked=\\"checked\\"" : "" %>');e.equal(u({a:!0}),'checked="checked"',"can handle slash escapes in interpolations.");var r=t.template("<ul><%   for (var key in people) { %><li><%= people[key] %></li><% } %></ul>");n=r({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),e.equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var s=t.template('<ul><% _.each(numbers.split("\\n"), function(item) { %><li><%= item %></li><% }) %></ul>');n=s({numbers:"one\ntwo\nthree\nfour"}),e.equal(n,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in JavaScript");var o=t.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>');n=o({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}}),e.equal(n,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>');var c=t.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");n=c(),e.equal(n,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");var p=t.template("It's its, not it's");e.equal(p({}),"It's its, not it's");var d=t.template("<%   if(foo == 'bar'){ %>Statement quotes and 'quotes'.<% } %>");e.equal(d({foo:"bar"}),"Statement quotes and 'quotes'.");var f=t.template("This\n\t\tis: <%= x %>.\n\tok.\nend.");e.equal(f({x:"that"}),"This\n\t\tis: that.\n\tok.\nend.");var m=t.template("<i><%- value %></i>");n=m({value:"<script>"}),e.equal(n,"<i>&lt;script&gt;</i>");var v={name:"Moe",template:t.template("I'm <%= this.name %>")};e.equal(v.template(),"I'm Moe"),m=t.template("\n   <%\n   // a comment\n   if (data) { data += 12345; }; %>\n   <li><%= data %></li>\n "),e.equal(m({data:12345}).replace(/\s/g,""),"<li>24690</li>"),t.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g};var h=t.template("<ul>{{ for (var key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");n=h({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),e.equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var q=t.template("It's its, not it's");e.equal(q({}),"It's its, not it's"),d=t.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}"),e.equal(d({foo:"bar"}),"Statement quotes and 'quotes'."),t.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g};var y=t.template("<ul><? for (var key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");n=y({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),e.equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var b=t.template("It's its, not it's");e.equal(b({}),"It's its, not it's"),d=t.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>"),e.equal(d({foo:"bar"}),"Statement quotes and 'quotes'."),t.templateSettings={interpolate:/\{\{(.+?)\}\}/g};var g=t.template("Hello {{planet}}!");e.equal(g({planet:"World"}),"Hello World!","can mimic mustache.js");var x=t.template("a null undefined {{planet}}");e.equal(x({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")}),QUnit.test("_.template provides the generated function source, when a SyntaxError occurs",function(e){var a;try{t.template("<b><%= if x %></b>")}catch(e){a=e.source}e.ok(/__p/.test(a))}),QUnit.test("_.template handles \\u2028 & \\u2029",function(e){var a=t.template('<p>\u2028<%= "\\u2028\\u2029" %>\u2029</p>');e.strictEqual(a(),"<p>\u2028\u2028\u2029\u2029</p>")}),QUnit.test("result calls functions and returns primitives",function(e){var a={w:"",x:"x",y:function(){return this.x}};e.strictEqual(t.result(a,"w"),""),e.strictEqual(t.result(a,"x"),"x"),e.strictEqual(t.result(a,"y"),"x"),e.strictEqual(t.result(a,"z"),void 0),e.strictEqual(t.result(null,"x"),void 0)}),QUnit.test("result returns a default value if object is null or undefined",function(e){e.strictEqual(t.result(null,"b","default"),"default"),e.strictEqual(t.result(void 0,"c","default"),"default"),e.strictEqual(t.result("".match("missing"),1,"default"),"default")}),QUnit.test("result returns a default value if property of object is missing",function(e){e.strictEqual(t.result({d:null},"d","default"),null),e.strictEqual(t.result({e:!1},"e","default"),!1)}),QUnit.test("result only returns the default value if the object does not have the property or is undefined",function(e){e.strictEqual(t.result({},"b","default"),"default"),e.strictEqual(t.result({d:void 0},"d","default"),"default")}),QUnit.test("result does not return the default if the property of an object is found in the prototype",function(e){var a=function(){};a.prototype.bar=1,e.strictEqual(t.result(new a,"bar",2),1)}),QUnit.test("result does use the fallback when the result of invoking the property is undefined",function(e){var a={a:function(){}};e.strictEqual(t.result(a,"a","failed"),void 0)}),QUnit.test("result fallback can use a function",function(e){var a={a:[1,2,3]};e.strictEqual(t.result(a,"b",t.constant(5)),5),e.strictEqual(t.result(a,"b",function(){return this.a}),a.a,"called with context")}),QUnit.test("_.templateSettings.variable",function(e){var a="<%=data.x%>",n={x:"x"},i=t.template(a,{variable:"data"});e.strictEqual(i(n),"x"),t.templateSettings.variable="data",e.strictEqual(t.template(a)(n),"x")}),QUnit.test("#547 - _.templateSettings is unchanged by custom settings.",function(e){e.notOk(t.templateSettings.variable),t.template("",{},{variable:"x"}),e.notOk(t.templateSettings.variable)}),QUnit.test("#556 - undefined template variables.",function(e){var a=t.template("<%=x%>");e.strictEqual(a({x:null}),""),e.strictEqual(a({x:void 0}),"");var n=t.template("<%-x%>");e.strictEqual(n({x:null}),""),e.strictEqual(n({x:void 0}),"");var i=t.template("<%=x.foo%>");e.strictEqual(i({x:{}}),""),e.strictEqual(i({x:{}}),"");var l=t.template("<%-x.foo%>");e.strictEqual(l({x:{}}),""),e.strictEqual(l({x:{}}),"")}),QUnit.test("interpolate evaluates code only once.",function(e){e.expect(2);var a=0,n=t.template("<%= f() %>");n({f:function(){e.notOk(a++)}});var i=0,l=t.template("<%- f() %>");l({f:function(){e.notOk(i++)}})}),QUnit.test("#746 - _.template settings are not modified.",function(e){e.expect(1);var a={};t.template("",null,a),e.deepEqual(a,{})}),QUnit.test("#779 - delimeters are applied to unescaped text.",function(e){e.expect(1);var a=t.template("<<\nx\n>>",null,{evaluate:/<<(.*?)>>/g});e.strictEqual(a(),"<<\nx\n>>")})}();