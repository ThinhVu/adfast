describe("directive: vcRecaptcha",function(){"use strict";var e,t,n,o,a=12e4,c="1234567890123456789012345678901234567890";beforeEach(function(){module("vcRecaptcha"),inject(function(a,c,r,i){e=a.$new(),t=c,n=r,o=i})}),describe("invalid key",function(){var n,o;afterEach(function(){expect(function(){var o=angular.element(n);t(o)(e),e.$digest()}).toThrow(new Error(o))}),it("should throw an error - no key",function(){n="<div vc-recaptcha></div>",o='You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create'}),it("should throw an error - key length is not 40 caracters long",function(){n='<div vc-recaptcha key="key"></div>',o='You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create',e.key="abc"}),it("should throw an error - key length is not 40 caracters long - key changed",function(){n='<div vc-recaptcha key="key"></div>',o='You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create',e.key="abc1"})}),describe("widgetId",function(){it("should be null at start",function(){var n=angular.element('<div vc-recaptcha key="key"></div>');e.key=c,expect(function(){t(n)(e),e.$digest()}).not.toThrow(),expect(n.isolateScope().widgetId).toBeNull()})}),describe("form validation",function(){beforeEach(function(){e.key=c,e.onCreate=jasmine.createSpy("onCreate"),e.onSuccess=jasmine.createSpy("onSuccess")}),afterEach(function(){expect(o.create).toHaveBeenCalled()}),it("should change the validation to false, widget just created",function(){var n=angular.element('<form name="form"><input type="text" ng-model="something" /><div vc-recaptcha key="key" on-create="onCreate({widgetId: widgetId})" /></form>'),a=function(){return{then:function(e){var t="a";e(t)}}};spyOn(o,"create").and.callFake(a),t(n)(e),e.$digest(),expect(e.form.$valid).toBeFalsy(),expect(e.onCreate).toHaveBeenCalledWith({widgetId:"a"})}),it("should change the validation to true - first timeout flushed",function(){var c=angular.element('<form name="form"><input type="text" ng-model="something" /><div vc-recaptcha key="k" on-create="onCreate()" on-success="onSuccess()"/></form>'),r=function(e,t){return t.callback("response from google"),{then:function(e){e()}}};spyOn(o,"create").and.callFake(r),t(c)(e),e.$digest(),n.flush(a-1),expect(e.form.$valid).toBeTruthy()}),it("should change the validation to false - session expired",function(){var c=angular.element('<form name="form"><input type="text" ng-model="something" /><div vc-recaptcha key="k" on-create="onCreate()" on-success="onSuccess()"/></form>'),r=function(e,t){return t["expired-callback"](),{then:function(e){e()}}};spyOn(o,"create").and.callFake(r),t(c)(e),e.$digest(),n.flush(a+1),expect(e.form.$valid).toBeFalsy()}),it("should call the onSuccess callback with the right params",function(){var a=angular.element('<form name="form"><input type="text" ng-model="something" /><div vc-recaptcha key="key" on-create="onCreate()" on-success="onSuccess({response: response, widgetId: id})"/></form>'),c=function(e,t){return t.callback("response from google"),{then:function(e){e()}}};spyOn(o,"create").and.callFake(c),t(a)(e),e.$digest(),n.flush(),expect(e.onSuccess).toHaveBeenCalledWith({response:"response from google",widgetId:void 0})}),it("the widget should be using the setted language",function(){var a=angular.element('<form name="form"><input type="text" ng-model="something" /><div vc-recaptcha key="key" on-create="onCreate()" lang="es" on-success="onSuccess({response: response, widgetId: id})"/></form>'),c=function(e,t){return t.callback(t.lang),{then:function(e){e()}}};spyOn(o,"create").and.callFake(c),t(a)(e),e.$digest(),n.flush(),expect(e.onSuccess).toHaveBeenCalledWith({response:"es",widgetId:void 0})})})});